<!DOCTYPE html>

<html lang="ja">
<HEAD>
<title>CommonFunc</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" href="./style.css" type="text/css">
</HEAD>

<BODY>


<H1>CommonFunc</H1>
<div class="topic">

<A HREF="section02.htm" target ="showframe">2. MessageProc</A><BR>
<A HREF="section02.htm#2.1" target ="showframe">2.1 MessageProc概要</A><br>
<A HREF="section02.htm#2.2" target ="showframe">2.2 MessageProcの使用方法</A><br>
<A HREF="section02.htm#2.3" target ="showframe">2.3 API一覧</A><br>
<A HREF="section02.htm#2.4" target ="showframe">2.4 void SetLocaleMode(int SpecifiedMode)</A><br>
<A HREF="section02.htm#2.5" target ="showframe">2.5 wchar_t* GetMsg(int Id)</A><br>
<A HREF="section02.htm#2.6" target ="showframe">2.6 wchar_t* GetMsgEng(int Id)</A><br>
<A HREF="section02.htm#2.7" target ="showframe">2.7 wchar_t* GetMsgJpn(int Id)</A><br>
<A HREF="section02.htm#2.8" target ="showframe">2.8 char* GetMsgSjis(int Id)</A><br>
<A HREF="section02.htm#2.9" target ="showframe">2.9 char* GetMsgSjisEng(int Id)</A><br>
<A HREF="section02.htm#2.10" target ="showframe">2.10 char* GetMsgSjisJpn(int Id)</A><br>
<A HREF="section02.htm#2.11" target ="showframe">2.11 char* GetMsgUtf8(int Id)</A><br>
<A HREF="section02.htm#2.12" target ="showframe">2.12 char* GetMsgUtf8Eng(int Id)</A><br>
<A HREF="section02.htm#2.13" target ="showframe">2.13 char* GetMsgUtf8Jpn(int Id)</A><br>
<A HREF="section02.htm#2.14" target ="showframe">2.14 void AddEng(int Id, const wchar_t* Msg)</A><br>
<A HREF="section02.htm#2.15" target ="showframe">2.15 void AddJpn(int Id, const wchar_t* Msg)</A><br>
<A HREF="section02.htm#2.16" target ="showframe">2.16 void DelEng(int Id)</A><br>
<A HREF="section02.htm#2.17" target ="showframe">2.17 void DelJpn(int Id)</A><br>
<A HREF="section02.htm#2.18" target ="showframe">2.18 void ClearAllMsg()</A><br>
<A HREF="section02.htm#2.19" target ="showframe">2.19 int StartLogging(wchar_t* FilePath)</A><br>
<A HREF="section02.htm#2.20" target ="showframe">2.20 void AddLog(char* Msg, int LogType)</A><br>
<A HREF="section02.htm#2.21" target ="showframe">2.21 void AddLog(wchar_t* Msg, int LogType)</A><br>
<A HREF="section02.htm#2.22" target ="showframe">2.22 int StopLogging()</A><br>
<p>

<A HREF="section03.htm" target ="showframe">3. StkProperties</A><BR>
<A HREF="section03.htm#3.1" target ="showframe">3.1 StkProperties概要</A><br>
<A HREF="section03.htm#3.2" target ="showframe">3.2 StkPropertiesの使用方法</A><br>
<A HREF="section03.htm#3.3" target ="showframe">3.3 int GetProperties(const wchar_t* FileName)</A><br>
<A HREF="section03.htm#3.4" target ="showframe">3.4 int GetPropertyInt(const char* PropName, int* Value)</A><br>
<A HREF="section03.htm#3.5" target ="showframe">3.5 int GetPropertyStr(const char* PropName, char Value[256])</A><br>
<p>

<A HREF="section04.htm" target ="showframe">4. StkObject</A><BR>
<A HREF="section04.htm#4.1" target ="showframe">4.1 StkObject概要</A><br>
<A HREF="section04.htm#4.2" target ="showframe">4.2 StkObjectの使用方法</A><br>
<A HREF="section04.htm#4.3" target ="showframe">4.3 API一覧</A><br>
<A HREF="section04.htm#4.4" target ="showframe">4.4 StkObject(const wchar_t* Name)</A><br>
<A HREF="section04.htm#4.5" target ="showframe">4.5 StkObject(const wchar_t* Name, int IntValue)</A><br>
<A HREF="section04.htm#4.6" target ="showframe">4.6 StkObject(const wchar_t* Name, float FloatValue)</A><br>
<A HREF="section04.htm#4.7" target ="showframe">4.7 StkObject(const wchar_t* Name, const wchar_t* StringValue)</A><br>
<A HREF="section04.htm#4.8" target ="showframe">4.8 ~StkObject()</A><br>
<A HREF="section04.htm#4.9" target ="showframe">4.9 StkObject* Clone()</A><br>
<A HREF="section04.htm#4.10" target ="showframe">4.10 bool Equals(StkObject* StkObj)</A><br>
<A HREF="section04.htm#4.11" target ="showframe">4.11 StkObject* Contains(StkObject* StkObj)</A><br>
<A HREF="section04.htm#4.12" target ="showframe">4.12 int GetArrayLength()</A><br>
<A HREF="section04.htm#4.13" target ="showframe">4.13 int GetChildElementCount()</A><br>
<A HREF="section04.htm#4.14" target ="showframe">4.14 int GetAttributeCount()</A><br>
<A HREF="section04.htm#4.15" target ="showframe">4.15 wchar_t* GetName()</A><br>
<A HREF="section04.htm#4.16" target ="showframe">4.16 int GetType()</A><br>
<A HREF="section04.htm#4.17" target ="showframe">4.17 int GetIntValue()</A><br>
<A HREF="section04.htm#4.18" target ="showframe">4.18 float GetFloatValue()</A><br>
<A HREF="section04.htm#4.19" target ="showframe">4.19 wchar_t* GetStringValue()</A><br>
<A HREF="section04.htm#4.20" target ="showframe">4.20 void SetIntValue(int IntValue)</A><br>
<A HREF="section04.htm#4.21" target ="showframe">4.21 void SetFloatValue(float)</A><br>
<A HREF="section04.htm#4.22" target ="showframe">4.22 void SetStringValue(const wchar_t* StringValue)</A><br>
<A HREF="section04.htm#4.23" target ="showframe">4.23 StkObject* GetFirstChildElement()</A><br>
<A HREF="section04.htm#4.24" target ="showframe">4.24 StkObject* GetLastChildElement()</A><br>
<A HREF="section04.htm#4.25" target ="showframe">4.25 StkObject* GetFirstAttribute()</A><br>
<A HREF="section04.htm#4.26" target ="showframe">4.26 StkObject* GetLastAttribute()</A><br>
<A HREF="section04.htm#4.27" target ="showframe">4.27 StkObject* GetNext()</A><br>
<A HREF="section04.htm#4.28" target ="showframe">4.28 void AppendChildElement(StkObject* ChildObj)</A><br>
<A HREF="section04.htm#4.29" target ="showframe">4.29 void AppendAttribute(StkObject* AttrObj)</A><br>
<A HREF="section04.htm#4.30" target ="showframe">4.30 void ToXml(wchar_t* StrXml, int Size)</A><br>
<A HREF="section04.htm#4.31" target ="showframe">4.31 int ToJson(wchar_t* StrJson, int Size)</A><br>
<A HREF="section04.htm#4.32" target ="showframe">4.32 StkObject* CreateObjectFromXml(const wchar_t* StrXml, int* ErrorCode)</A><br>
<A HREF="section04.htm#4.33" target ="showframe">4.33 StkObject* CreateObjectFromJson(const wchar_t* StrJson, int* ErrorCode)</A><br>
<A HREF="section04.htm#4.34" target ="showframe">4.34 static int Analyze(const wchar_t*)</A><br>
<p>

<A HREF="section05.htm" target ="showframe">5. StkStringParser</A><BR>
<A HREF="section05.htm#5.1" target ="showframe">5.1 StkStringParser概要</A><br>
<A HREF="section05.htm#5.2" target ="showframe">5.2 StkStringParserの使用方法</A><br>
<A HREF="section05.htm#5.3" target ="showframe">5.3 API一覧</A><br>
<A HREF="section05.htm#5.4" target ="showframe">5.4 int ParseInto1Param(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1)</A><br>
<A HREF="section05.htm#5.5" target ="showframe">5.5 int ParseInto2Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, wchar_t* OutStr2)</A><br>
<A HREF="section05.htm#5.6" target ="showframe">5.6 int ParseInto3Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, wchar_t* OutStr2, wchar_t* OutStr3)</A><br>
<A HREF="section05.htm#5.7" target ="showframe">5.7 int ParseInto4Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, wchar_t* OutStr2, wchar_t* OutStr3, wchar_t* OutStr4)</A><br>
<A HREF="section05.htm#5.8" target ="showframe">5.8 int ParseInto1Param(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, int OutStr1Len)</A><br>
<A HREF="section05.htm#5.9" target ="showframe">5.9 int ParseInto2Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, int OutStr1Len, wchar_t* OutStr2, int OutStr2Len)</A><br>
<A HREF="section05.htm#5.10" target ="showframe">5.10 int ParseInto3Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, int OutStr1Len, wchar_t* OutStr2, int OutStr2Len, wchar_t* OutStr3, int OutStr3Len)</A><br>
<A HREF="section05.htm#5.11" target ="showframe">5.11 int ParseInto4Params(const wchar_t* OriginStr, const wchar_t* Format, wchar_t Target, wchar_t* OutStr1, int OutStr1Len, wchar_t* OutStr2, int OutStr2Len, wchar_t* OutStr3, int OutStr3Len, wchar_t* OutStr4, int OutStr4Len)</A><br>
<p>

</div>
</BODY>
</html>

