<!doctype html>
<html lang="ja">

<HEAD>
<title>stkcokect</title>
<meta charset="utf-8">
<link rel="stylesheet" href="./style.css" type="text/css">
</HEAD>

<BODY>
<div id="container">
<H1>1. API仕様</H1>



<H2 ID="1.1">1.1 StkSocket_AddInfo</H2>
<div class="topic">
ソケット情報を追加登録します。ソケット情報は最大でSTKSOCKET_MAX_SOCKET_NUMBERが示す個数分追加することができます。<br>
指定したIDと関連付くソケット情報がすでに存在している場合，ソケット情報がすでに最大件数登録されている場合，
入力パラメータが不正の場合，本APIは-1を返します。<br>
このAPIはスレッドセーフではありません。StkSocketの他のAPIと同時に呼び出したときの動作は保証されていません。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_AddInfo(int TargetId, int SockType, int ActionType, const wchar_t TargetAddr[256], int TargetPort)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>追加するソケット情報を特定するためのID</td></tr>
<tr><td>SockType</td><td>入力</td><td>StreamかDatagramを指定することができる。<br>
STKSOCKET_TYPE_STREAM SOCK_STREAM：Stream用ソケット<br>
STKSOCKET_TYPE_DGRAM  SOCK_DGRAM：Datagram用ソケット
</td></tr>
<tr><td>ActionType</td><td>入力</td><td>動作種別。以下の値の何れかを指定することができる。<br>
STKSOCKET_ACTIONTYPE_RECEIVER：データ受信用ソケット<br>
STKSOCKET_ACTIONTYPE_SENDER：データ送信用ソケット
</td></tr>
<tr><td>TargetAddr</td><td>入力</td><td>
データ受信用ソケットの場合，待ち受けホスト名またはIPアドレス(IPv4またはIPv6形式)<br>
データ送信用ソケットの場合，接続先ホスト名またはIPアドレス(IPv4またはIPv6形式)
</td></tr>
<tr><td>TargetPort</td><td>入力</td><td>
データ受信用ソケットの場合，待ち受けポート番号<br>
データ送信用ソケットの場合，接続先ポート番号
</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケット情報の登録に成功<br>
-1: ソケット情報の登録に失敗
</div><p>
</div><p>



<H2 ID="1.2">1.2 StkSocket_DeleteInfo</H2>
<div class="topic">
ソケット情報を削除します。<br>
このAPIはスレッドセーフではありません。StkSocketの他のAPIと同時に呼び出したときの動作は保証されていません。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_DeleteInfo(int TargetId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>削除するソケット情報を特定するためのID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケット情報の削除に成功<br>
-1: ソケット情報の削除に失敗
</div><p>
</div><p>



<H2 ID="1.3">1.3 StkSocket_GetInfo</H2>
<div class="topic">
ソケット情報を取得します。<p>
<u>シグネチャ</u>
<div class="topic">
<p>
int StkSocket_GetInfo(int Index, int* TargetId, int* SockType, int* ActionType, wchar_t TargetAddr[256], int* TargetPort, bool* CopiedFlag)
</p>
<p>
int StkSocket_GetInfo(int TargetId, int* SockType, int* ActionType, wchar_t TargetAddr[256], int* TargetPort, bool* CopiedFlag)
</p>
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Index</td><td>入力</td><td>取得するソケット情報のインデックス(0から開始の連番)</td></tr>
<tr><td>TargetId</td><td>出力</td><td>ソケット情報を特定するためのIDを格納するアドレス</td></tr>
<tr><td>SockType</td><td>出力</td><td>ソケットの種別を格納するアドレス</td></tr>
<tr><td>ActionType</td><td>出力</td><td>動作種別を格納するアドレス</td></tr>
<tr><td>TargetAddr</td><td>出力</td><td>IPアドレスまたはホスト名を格納するアドレス</td></tr>
<tr><td>TargetPort</td><td>出力</td><td>ポート番号を格納するアドレス</td></tr>
<tr><td>CopiedFlag</td><td>出力</td><td>StkSocket_CopyInfoでコピーされたかどうかを示すフラグを格納するアドレス</td></tr>
</table>
<p>
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>取得するソケット情報のID</td></tr>
<tr><td>SockType</td><td>出力</td><td>ソケットの種別を格納するアドレス</td></tr>
<tr><td>ActionType</td><td>出力</td><td>動作種別を格納するアドレス</td></tr>
<tr><td>TargetAddr</td><td>出力</td><td>IPアドレスまたはホスト名を格納するアドレス</td></tr>
<tr><td>TargetPort</td><td>出力</td><td>ポート番号を格納するアドレス</td></tr>
<tr><td>CopiedFlag</td><td>出力</td><td>StkSocket_CopyInfoでコピーされたかどうかを示すフラグを格納するアドレス</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケット情報の取得に成功<br>
-1: ソケット情報の取得に失敗
</div><p>
</div><p>



<H2 ID="1.4">1.4 StkSocket_CopyInfo</H2>
<div class="topic">
ソケット情報をコピーします。<br>
ひとつのLISTEN用ソケットをもとに，複数のACCEPT用ソケットをオープンする場合，本メソッドを用いて
LISTEN用ソケット情報をコピーしたあと，StkSocket_AcceptでACCEPT用ソケットをオープンしてください。<br>
コピー元のソケット情報は，STKSOCKET_TYPE_STREAMで且つSTKSOCKET_ACTIONTYPE_RECEIVERである必要があります。<br>
以下に示す項目の何れかと合致する場合，本メソッドは-1を返します。<br>
<ul>
<li>NewId と関連付くソケット情報がすでに存在している場合
<li>ExistingIdと関連付くソケット情報が存在しない場合
<li>ExistingIdで関連付くソケットがSTKSOCKET_TYPE_STREAMで且つSTKSOCKET_ACTIONTYPE_RECEIVERでない場合
<li>ExistingIdで関連付くソケットがStkSocket_CopyInfoを使って生成されている場合
<li>ソケット情報がすでに最大件数登録されている場合
</ul>
<p>

<u>シグネチャ</u>
<div class="topic">
int StkSocket_CopyInfo(int NewId, int ExistingId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>NewId</td><td>入力</td><td>コピー後の新しいソケット情報のID</td></tr>
<tr><td>ExistingId</td><td>入力</td><td>コピー元のソケット情報のID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケット情報のコピーに成功<br>
-1: ソケット情報のコピーに失敗
</div><p>
</div><p>



<H2 ID="1.5">1.5 StkSocket_GetNumOfStkInfos</H2>
<div class="topic">
現在登録されているソケット情報の個数を返します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_GetNumOfStkInfos()
</div><p>
<u>戻り値</u>
<div class="topic">
現在登録されているソケット情報の個数
</div><p>
</div><p>



<H2 ID="1.6">1.6 StkSocket_Open</H2>
<div class="topic">
指定したデータ受信用ソケットをオープンします。<br>
対象のソケットの動作種別はSTKSOCKET_ACTIONTYPE_RECEIVERである必要があります。
動作種別がSTKSOCKET_ACTIONTYPE_RECEIVERでないとき(STKSOCKET_ACTIONTYPE_SENDERのとき)は，何も処理をせず戻り値=0を返します。<br>
プロトコルがTCP(STKSOCKET_TYPE_STREAM SOCK_STREAM)の場合，本APIの内部処理として，BINDおよびLISTENを実行します。
プロトコルがUDP(STKSOCKET_TYPE_DGRAM  SOCK_DGRAM)の場合，本APIの内部処理として，BINDを実行します。<br>
対象のソケット情報がSTKSOCKET_TYPE_STREAM且つSTKSOCKET_ACTIONTYPE_RECEIVER且つStkSocket_CopyInfoで生成されている場合，ソケット情報の状態のみをSTKSOCKET_STATUS_OPENに遷移させます。<br>
<div class="topic">
<table class="tblstyle">
<tr><td></td><td>AddInfoで登録したソケットを指定してオープン</td><td>CopyInfoで登録したソケットを指定してオープン</td></tr>
<tr><td>指定したソケットの状態遷移</td>
<td><center>STKSOCKET_STATUS_CLOSE<br>↓<br>Listenソケットをオープン<br>↓<br>STKSOCKET_STATUS_OPEN</center></td>
<td><center>STKSOCKET_STATUS_CLOSE<br>↓<br>STKSOCKET_STATUS_OPEN</center></td>
</tr>
<tr><td>指定と関連するソケット(CopyInfoで登録した子ソケット)の状態遷移</td>
<td><center>STKSOCKET_STATUS_CLOSE<br>↓<br>STKSOCKET_STATUS_OPEN</center></td>
<td><center>-</center></td>
</tr>
<tr><td>指定と関連するソケット(AddInfoで登録した親ソケット)の状態遷移</td>
<td><center>-</center></td>
<td><center>状態遷移なし</center></td>
</tr>
</table>
</div>
<p>
また，LISTENソケットのオプションとして下記の固定値が設定されます。<p>
SO_REUSEADDR = yes<br>
SO_RCVTIMEO = 10,000ms<br>
SO_SNDTIMEO = 10,000ms<br>
SO_RCVBUF = 1,000,000<br>
SO_SNDBUF = 1,000,000<br>
<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Open(int TargetId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>オープンするソケット情報を特定するためのID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケットのオープンに成功<br>
-1: ソケットのオープンに失敗
</div><p>
</div><p>



<H2 ID="1.7">1.7 StkSocket_Close</H2>
<div class="topic">
指定したデータ受信用ソケットをクローズします。<br>
プロトコルがTCP(STKSOCKET_TYPE_STREAM SOCK_STREAM)の場合，指定したLISTEN用ソケットのクローズの前に，
それと関連づくすべてのACCEPT用ソケットをクローズします。
対象がStkSocket_AddInfoで生成したソケット情報の場合，当該ソケットと関連するStkSocket_CopyInfoで生成した
ソケット情報についても，ACCEPT用ソケットをクローズします(StkSocket_CopyInfoで生成したソケット情報の状態はSTKSOCKET_STATUS_CLOSEに遷移します)。<br>
対象がStkSocket_CopyInfoでコピーしたソケット情報の場合，ACCEPT用ソケットのクローズのみ行い，LISTEN用ソケットはクローズしません
(StkSocket_CopyInfoで生成したソケット情報の状態はSTKSOCKET_STATUS_CLOSEに遷移します)。<br>
<div class="topic">
<table class="tblstyle">
<tr><td></td><td>AddInfoで登録したソケットを指定してクローズ</td><td>CopyInfoで登録したソケットを指定してクローズ</td></tr>
<tr><td>指定したソケットの状態遷移</td>
<td><center>STKSOCKET_STATUS_ACCEPT<br>↓<br>Acceptソケットをクローズ<br>↓<br>STKSOCKET_STATUS_OPEN<br>↓<br>Listenソケットをクローズ<br>↓<br>STKSOCKET_STATUS_CLOSE</center></td>
<td><center>STKSOCKET_STATUS_ACCEPT<br>↓<br>Acceptソケットをクローズ<br>↓<br>STKSOCKET_STATUS_OPEN<br>↓<br>STKSOCKET_STATUS_CLOSE</center></td>
</tr>
<tr><td>指定と関連するソケット(CopyInfoで登録した子ソケット)の状態遷移</td>
<td><center>STKSOCKET_STATUS_ACCEPT<br>↓<br>Acceptソケットをクローズ<br>↓<br>STKSOCKET_STATUS_OPEN<br>↓<br>STKSOCKET_STATUS_CLOSE</center></td>
<td><center>-</center></td>
</tr>
<tr><td>指定と関連するソケット(AddInfoで登録した親ソケット)の状態遷移</td>
<td><center>-</center></td>
<td><center>状態遷移なし</center></td>
</tr>
</table>
</div>
<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Close(int TargetId, bool WaitForPeerClose)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>クローズするソケット情報を特定するためのID</td></tr>
<tr><td>WaitForPeerClose</td><td>入力</td><td>true: 接続先(送信側)のクローズを待ち，グレースフルなクローズを行う。<br>
false: ただちにソケットをクローズする。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケットのクローズに成功<br>
-1: ソケットのクローズに失敗
</div><p>
</div><p>



<H2 ID="1.8">1.8 StkSocket_Accept</H2>
<div class="topic">
指定したデータ受信用ソケットでACCEPTします。指定したデータ受信用ソケットは，予め
StkSocket_OpenメソッドでLISTENしている必要があります。<br>
LISTENしているソケットにPeerからの接続が無い場合，本メソッドは直ちに終了し，-1を返します。<br>
また，ACCEPTソケットのオプションとして下記の固定値が設定されます。<p>
SO_LINGER = 10sec<br>
SO_RCVTIMEO = 10,000ms<br>
SO_SNDTIMEO = 10,000ms<br>
SO_RCVBUF = 1,000,000<br>
SO_SNDBUF = 1,000,000<br>
<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Accept(int Id)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>ACCEPTするソケット情報を特定するためのID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ソケットのACCEPTに成功<br>
-1: ソケットのACCEPTに失敗
</div><p>
</div><p>



<H2 ID="1.9">1.9 StkSocket_CloseAccept</H2>
<div class="topic">
指定したACCEPTソケットをクローズします。
<u>シグネチャ</u>
<div class="topic">
int StkSocket_CloseAccept(int Id, int LogId, bool WaitForPeerClose)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>クローズするソケット情報を特定するためのID</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用。ソケット情報を特定するためのIDを指定する。</td></tr>
<tr><td>WaitForPeerClose</td><td>入力</td><td>true: 接続先(送信側)のクローズを待ち，グレースフルなクローズを行う。<br>
false: ただちにソケットをクローズする。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
常に0を返す。
</div><p>
</div><p>



<H2 ID="1.10">1.10 StkSocket_Connect</H2>
<div class="topic">
指定したデータ送信用ソケットでホストに接続します。
ソケットのオプションとして下記の固定値が設定されます。<p>
SO_LINGER = 10sec<br>
SO_RCVTIMEO = 10,000ms<br>
SO_SNDTIMEO = 10,000ms<br>
SO_RCVBUF = 1,000,000<br>
SO_SNDBUF = 1,000,000<br>
<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Connect(int Id)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>データ送信用のソケット情報を特定するためのID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ホストへの接続に成功<br>
-1: ホストへの接続に失敗
</div><p>
</div><p>



<H2 ID="1.11">1.11 StkSocket_Disconnect</H2>
<div class="topic">
指定したデータ送信用ソケットでのホストへの接続を切断します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Disconnect(int Id, int LogId, bool WaitForPeerClose)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>クローズするソケット情報を特定するためのID</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用。ソケット情報を特定するためのIDを指定する。</td></tr>
<tr><td>WaitForPeerClose</td><td>入力</td><td>true: 接続先(受信側)のクローズを待ち，グレースフルなクローズを行う。<br>
false: ただちにソケットをクローズする。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
0: ホスト接続の切断に成功<br>
-1: ホスト接続の切断に失敗
</div><p>
</div><p>



<H2 ID="1.12">1.12 StkSocket_Receive</H2>
<div class="topic">
指定したソケットでデータを受信します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Receive(int Id, int LogId, unsigned char* Buffer, int BufferSize, int FinishCondition, int FinishCondTimeout, unsigned char* Opt1, int Opt2)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>操作対象のソケット情報を特定するためのID。StkSocket_AddInfoで追加したときのIDと関連する。</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用のID。通常前述のIdと同じ値を指定する。
データ受信後おなじソケットを用いてデータ送信する場合や，データ送信後おなじソケットを用いてデータ受信する場合に，
意図的にログ出力用IDを変更したい場合，値を変えることができる。</td></tr>
<tr><td>Buffer</td><td>入力</td><td>受信したデータを格納するバッファ領域。</td></tr>
<tr><td>BufferSize</td><td>入力</td><td>受信したデータを格納するバッファ領域のサイズ。</td></tr>
<tr><td>FinishCondition</td><td>入力</td><td>メソッドアウトする条件。以下の何れかを指定する。<br>
<ul>
<li>1以上 : 指定したサイズのデータ受信後にメソッドアウト。</li>
<li>0 : データ受信後無条件にメソッドアウト。</li>
<li>-1 : 指定した文字列を受信した場合メソッドアウト。</li>
<li>-2 : 送信側ソケットがクローズされたときメソッドアウト。</li>
<li>-3 : 
HTTPヘッダに"Content-Length"が指定されている場合: Content-Lengthで指定したバイト数のデータを受信後メソッドアウト。<br/>
HTTPヘッダに"Transfer-Encoding: chunked"が指定されている場合: Chunkを受信後メソッドアウト。詳細な振る舞いは，Opt2で指定。<br/>
上記以外: HTTPヘッダを受信後メソッドアウト。<br/>
</li>
<li>-4 : タイムアウトを検知した場合メソッドアウト。</li>
</ul></td></tr>
<tr><td>FinishCondTimeout</td><td>入力</td><td>タイムアウト時間(ミリ秒)。データ受信後一定時間(ミリ秒）更なるデータ受信が無い場合タイムアウト。0は無効。</td></tr>
<tr><td>Opt1</td><td>入力</td><td>
    <ul>
        <li>FinishConditionが-1の場合，メソッドアウトの条件となるバイト列のポインタを指定。NULLの場合評価されない。</li>
    </ul>
</td></tr>
<tr><td>Opt2</td><td>入力</td><td>
    <ul>
        <li>FinishConditionが-1の場合，メソッドアウトの条件となるバイト列のサイズを指定。</li>
        <li>FinishCondiationが-3で且つ"Transfer-Encoding: chunked"が指定されている場合，下記のように振る舞いを制御(AND演算した値を指定)。<br/>
            0b0001: 1 Chunk毎メソッドアウトする。<br/>
            0b0010: Chunkに関する制御コードを残す。<br/>
        </li>
    </ul>
</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
-1: データの受信に失敗 <br/>
-2: データの受信に失敗(タイムアウトを検知したとき) <br/>
-1および-2以外: 受信したデータのサイズ(バイト数)
</div><p>
</div><p>



<H2 ID="1.13">1.13 StkSocket_Send</H2>
<div class="topic">
指定したソケットでデータを送信します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Send(int Id, int LogId, const unsigned char* Buffer, int BufferSize)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>操作対象のソケット情報を特定するためのID。StkSocket_AddInfoで追加したときのIDと関連する。</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用のID。通常前述のIdと同じ値を指定する。
データ受信後おなじソケットを用いてデータ送信する場合や，データ送信後おなじソケットを用いてデータ受信する場合に，
意図的にログ出力用IDを変更したい場合，値を変えることができる。</td></tr>
<tr><td>Buffer</td><td>入力</td><td>送信するデータを格納するバッファ領域。</td></tr>
<tr><td>BufferSize</td><td>入力</td><td>送信するデータを格納するバッファ領域のサイズ。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
-1: データの送信に失敗<br>
-1以外: 送信したデータのサイズ(バイト数)
</div><p>
</div><p>



<H2 ID="1.14">1.14 StkSocket_ReceiveUdp</H2>
<div class="topic">
指定したDatagram用ソケットでデータを受信します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_ReceiveUdp(int Id, int LogId, unsigned char* Buffer, int BufferSize)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>操作対象のソケット情報を特定するためのID。StkSocket_AddInfoで追加したときのIDと関連する。</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用のID。通常前述のIdと同じ値を指定する。
データ受信後おなじソケットを用いてデータ送信する場合や，データ送信後おなじソケットを用いてデータ受信する場合に，
意図的にログ出力用IDを変更したい場合，値を変えることができる。</td></tr>
<tr><td>Buffer</td><td>入力</td><td>受信したデータを格納するバッファ領域。</td></tr>
<tr><td>BufferSize</td><td>入力</td><td>受信したデータを格納するバッファ領域のサイズ。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
-1: データの受信に失敗<br/>
-2: データの受信に失敗(タイムアウトを検知したとき)<br/>
-1および-2以外: 受信したデータのサイズ(バイト数)
</div><p>
</div><p>



<H2 ID="1.15">1.15 StkSocket_SendUdp</H2>
<div class="topic">
指定したDatagram用ソケットでデータを送信します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_SendUdp(int Id, int LogId, const unsigned char* Buffer, int BufferSize)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>操作対象のソケット情報を特定するためのID。StkSocket_AddInfoで追加したときのIDと関連する。</td></tr>
<tr><td>LogId</td><td>入力</td><td>ログ出力用のID。通常前述のIdと同じ値を指定する。
データ受信後おなじソケットを用いてデータ送信する場合や，データ送信後おなじソケットを用いてデータ受信する場合に，
意図的にログ出力用IDを変更したい場合，値を変えることができる。</td></tr>
<tr><td>Buffer</td><td>入力</td><td>送信するデータを格納するバッファ領域。</td></tr>
<tr><td>BufferSize</td><td>入力</td><td>送信するデータを格納するバッファ領域のサイズ。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
-1: データの送信に失敗<br>
-1以外: 送信したデータのサイズ(バイト数)
</div><p>
</div><p>



<H2 ID="1.16">1.16 StkSocket_GetUdpMaxMessageSize</H2>
<div class="topic">
UDP(Datagram)で送信することができるメッセージのサイズを取得します。<br>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_GetUdpMaxMessageSize(int Id)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>Id</td><td>入力</td><td>ソケット情報を特定するためのID。</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
-1: メッセージサイズの取得に失敗<br>
-1以外: 取得したメッセージサイズ(バイト数)
</div><p>
</div><p>



<H2 ID="1.17">1.17 StkSocket_TakeFirstLog</H2>
<div class="topic">
StkSocketの最初のログを取得する。<p>
<u>シグネチャ</u>
<div class="topic">
void StkSocket_TakeFirstLog(int* TmpLog, int* TmpLogId, wchar_t* TmpLogParamStr1, wchar_t* TmpLogParamStr2, int* TmpLogParamInt1, int* TmpLogParamInt2)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TmpLog</td><td>出力</td><td>ログ・メッセージを特定するためのID</td></tr>
<tr><td>TmpLogId</td><td>出力</td><td>ログを出力したソケット情報を特定するためのID</td></tr>
<tr><td>TmpLogParamStr1</td><td>出力</td><td>文字列型データ#1。最大256文字。終端NULL文字含む。</td></tr>
<tr><td>TmpLogParamStr2</td><td>出力</td><td>文字列型データ#2。最大256文字。終端NULL文字含む。</td></tr>
<tr><td>TmpLogParamInt1</td><td>出力</td><td>数値型データ#1</td></tr>
<tr><td>TmpLogParamInt2</td><td>出力</td><td>数値型データ#2</td></tr>
</table>
</div><p>
</div><p>



<H2 ID="1.18">1.18 StkSocket_TakeLastLog</H2>
<div class="topic">
StkSocketの最終ログを取得する。<p>
<u>シグネチャ</u>
<div class="topic">
void StkSocket_TakeLastLog(int* TmpLog, int* TmpLogId, wchar_t* TmpLogParamStr1, wchar_t* TmpLogParamStr2, int* TmpLogParamInt1, int* TmpLogParamInt2)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TmpLog</td><td>出力</td><td>ログ・メッセージを特定するためのID</td></tr>
<tr><td>TmpLogId</td><td>出力</td><td>ログを出力したソケット情報を特定するためのID</td></tr>
<tr><td>TmpLogParamStr1</td><td>出力</td><td>文字列型データ#1。最大256文字。終端NULL文字含む。</td></tr>
<tr><td>TmpLogParamStr2</td><td>出力</td><td>文字列型データ#2。最大256文字。終端NULL文字含む。</td></tr>
<tr><td>TmpLogParamInt1</td><td>出力</td><td>数値型データ#1</td></tr>
<tr><td>TmpLogParamInt2</td><td>出力</td><td>数値型データ#2</td></tr>
</table>
</div><p>
</div><p>



<H2 ID="1.19">1.19 StkSocket_GetNumOfLogs</H2>
<div class="topic">
登録されているログの総数を返します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_GetNumOfLogs()
</div><p>
<u>戻り値</u>
<div class="topic">
登録されているログの総数
</div><p>
</div><p>



<H2 ID="1.20">1.20 StkSocket_ClearLog</H2>
<div class="topic">
登録されているすべてのログを削除します。<p>
<u>シグネチャ</u>
<div class="topic">
void StkSocket_ClearLog()
</div><p>
</div><p>



<H2 ID="1.21">1.21 StkSocket_GetStatus</H2>
<div class="topic">
指定されたソケットのステータスを取得します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_GetStatus(int TargetId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>ステータス取得対象のソケット情報</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
ステータス。以下の値の何れかが返される。<br>
指定したIDと関連付くソケット情報が存在しない場合，-1が返される。<p>
STKSOCKET_STATUS_OPEN, STKSOCKET_STATUS_ACCEPT, STKSOCKET_STATUS_CLOSE, -1<br>
</div><p>
</div><p>



<H2 ID="1.22">1.22 StkSocket_ForceStop</H2>
<div class="topic">
StkSocket_Receiveの処理を強制的に中止します。<p>
<u>シグネチャ</u>
<div class="topic">
void StkSocket_ForceStop(int TargetId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>中止するソケット情報のID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
指定したIDと関連付くソケット情報が存在する場合，0が返される。<br/>
指定したIDと関連付くソケット情報が存在しない場合，-1が返される。<br/>
</div><p>
</div><p>



<H2 ID="1.23">1.23 StkSocket_InitSecureSetting</H2>
<div class="topic">
<p>
SSL/TLS通信のための初期化を行います。StkSocket_SecureForRecv またはStkSocket_SecureForSendを呼び出す前に，本APIを呼び出す必要があります。
</p>
<u>シグネチャ</u>
<div class="topic">
void StkSocket_InitSecureSetting()
</div><p>
</div><p>



<H2 ID="1.24">1.24 StkSocket_SecureForRecv</H2>
<div class="topic">
<p>
SSL/TLSによるデータ送受信のための設定を行います。データ受信用ソケットに対してセキュアな通信を確立します。
本APIは，StkSocket_AddInfoでソケット情報を登録した後に呼び出される必要があります。
</p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_SecureForRecv(int TargetId, const char* PrivateKey, const char* Certificate)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>データ受信のための設定を行うソケット情報のID</td></tr>
<tr><td>PrivateKey</td><td>入力</td><td>秘密鍵のファイル名(パスを含む)</td></tr>
<tr><td>Certificate</td><td>入力</td><td>公開鍵証明書のファイル名(パスを含む)</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
正常終了した場合，0が返される。<br/>
指定したIDと関連付くソケット情報が存在しない場合，-1が返される。<br/>
</div><p>
</div><p>



<H2 ID="1.25">1.25 StkSocket_SecureForSend</H2>
<div class="topic">
<p>
SSL/TLSによるデータ送受信のための設定を行います。データ送信用ソケットに対してセキュアな通信を確立します。
本APIは，StkSocket_AddInfoでソケット情報を登録した後に呼び出される必要があります。
</p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_SecureForSend(int TargetId, const char* FileName, const char* Path)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>データ送信のための設定を行うソケット情報のID</td></tr>
<tr><td>FileName</td><td>入力</td><td>信頼するCAの証明書のファイル名</td></tr>
<tr><td>Path</td><td>入力</td><td>信頼するCAの証明書を格納するフォルダへのパス</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
正常終了した場合，0が返される。<br/>
指定したIDと関連付くソケット情報が存在しない場合，-1が返される。<br/>
</div><p>
</div><p>



<H2 ID="1.26">1.26 StkSocket_Unsecure</H2>
<div class="topic">
SSL/TLS通信のための設定を解除します。<p>
<u>シグネチャ</u>
<div class="topic">
int StkSocket_Unsecure(int TargetId)
</div><p>
<u>引数の説明</u>
<div class="topic">
<table class="tblstyle">
<tr><th>引数</th><th>入出力</th><th>説明</th></tr>
<tr><td>TargetId</td><td>入力</td><td>設定を解除するソケット情報のID</td></tr>
</table>
</div><p>
<u>戻り値</u>
<div class="topic">
正常終了した場合，0が返される。<br/>
指定したIDと関連付くソケット情報が存在しない場合，-1が返される。<br/>
</div><p>
</div><p>



</div><p>

</BODY>
</html>